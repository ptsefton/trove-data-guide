selector_to_html = {"a[href=\"#accessing-data-about-newspaper-gazette-pages\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">10.2. </span>Accessing data about newspaper &amp; gazette pages<a class=\"headerlink\" href=\"#accessing-data-about-newspaper-gazette-pages\" title=\"Permalink to this heading\">#</a></h1><h2><a class=\"toc-backref\" href=\"#id3\" role=\"doc-backlink\">Metadata</a><a class=\"headerlink\" href=\"#metadata\" title=\"Permalink to this heading\">#</a></h2><p><mark>==Include something about the different ways pages are represented \u2013 as images with identifiers, as consecutive numbers in navigation, and as labels.==</mark></p><p>There is no direct method for requesting metadata about a newspaper page in Trove. You can, however, get some information about pages from issues and articles.</p>", "a[href=\"#get-a-page-url-for-a-specific-title-date-and-page\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id5\" role=\"doc-backlink\">Get a page url for a specific title, date, and page</a><a class=\"headerlink\" href=\"#get-a-page-url-for-a-specific-title-date-and-page\" title=\"Permalink to this heading\">#</a></h3><p>You can also get page identifiers from a search for newspaper articles using the <code class=\"docutils literal notranslate\"><span class=\"pre\">/result</span></code> endpoint. To find the identifier for a particular page in a particular issue, you need to specify the title (the newspaper name), the publication date, and the page number.</p><p>First you need to tell the Trove API you want to search for newspaper articles. You do this by setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">category</span></code> parameter to <code class=\"docutils literal notranslate\"><span class=\"pre\">newspaper</span></code>.</p>", "a[href=\"#page-images-and-pdfs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id7\" role=\"doc-backlink\">Page images and PDFs</a><a class=\"headerlink\" href=\"#page-images-and-pdfs\" title=\"Permalink to this heading\">#</a></h2><h3><a class=\"toc-backref\" href=\"#id8\" role=\"doc-backlink\">Download a page image</a><a class=\"headerlink\" href=\"#download-a-page-image\" title=\"Permalink to this heading\">#</a></h3><p>Once you know the secret formula, getting page images is easy. You can download a page image using a url like this:</p>", "a[href=\"#download-a-collection-of-page-images\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id9\" role=\"doc-backlink\">Download a collection of page images</a><a class=\"headerlink\" href=\"#download-a-collection-of-page-images\" title=\"Permalink to this heading\">#</a></h3><p>Perhaps you want to download all the front pages of a particular newspaper, or the front page of all newspapers on a particular date. Use one of the methods described above to get a list of page urls. Then loop through the list, extracting the page id, and constructing the image download url for each page. The GLAM Workbench provides an example of this in the <a class=\"reference external\" href=\"https://glam-workbench.net/trove-newspapers/#harvest-australian-womens-weekly-covers-or-the-front-pages-of-any-newspaper\">Harvest Australian Women\u2019s Weekly covers (or the front pages of any newspaper)</a> notebook.</p>", "a[href=\"#download-a-page-image\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id8\" role=\"doc-backlink\">Download a page image</a><a class=\"headerlink\" href=\"#download-a-page-image\" title=\"Permalink to this heading\">#</a></h3><p>Once you know the secret formula, getting page images is easy. You can download a page image using a url like this:</p>", "a[href=\"#page-as-pdf\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id10\" role=\"doc-backlink\">Page as PDF</a><a class=\"headerlink\" href=\"#page-as-pdf\" title=\"Permalink to this heading\">#</a></h3>", "a[href=\"#metadata\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id3\" role=\"doc-backlink\">Metadata</a><a class=\"headerlink\" href=\"#metadata\" title=\"Permalink to this heading\">#</a></h2><p><mark>==Include something about the different ways pages are represented \u2013 as images with identifiers, as consecutive numbers in navigation, and as labels.==</mark></p><p>There is no direct method for requesting metadata about a newspaper page in Trove. You can, however, get some information about pages from issues and articles.</p>", "a[href=\"#get-a-list-of-front-page-urls\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id4\" role=\"doc-backlink\">Get a list of front page urls</a><a class=\"headerlink\" href=\"#get-a-list-of-front-page-urls\" title=\"Permalink to this heading\">#</a></h3><p>As described below, you can get information about individual issues from the <code class=\"docutils literal notranslate\"><span class=\"pre\">newspaper/title</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gazette/title</span></code> endpoints. The issue data includes a <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>. If you request the url you are redirected to the first page of that issue. Therefore, by working through each issue, it\u2019s possible to get a list of all of the front page urls for a particular newspaper. Here\u2019s an example:</p>", "a[href=\"#page-text\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id6\" role=\"doc-backlink\">Page text</a><a class=\"headerlink\" href=\"#page-text\" title=\"Permalink to this heading\">#</a></h2><p>aggregated articles</p><p>Trove Newspaper harvester file titles \u2013 how to reaggregate</p>"}
skip_classes = ["headerlink", "sd-stretched-link", "sd-rounded-pill"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
